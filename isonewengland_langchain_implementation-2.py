# -*- coding: utf-8 -*-
"""ISONewEngland_LangChain Implementation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18132PmIzw3Z2_ubOmNve6uFkVtP8D5xn

## PDF Query Using Langchain
"""

!pip install langchain
!pip install openai
!pip install PyPDF2
!pip install faiss-cpu
!pip install tiktoken
!pip install -U langchain-community

from PyPDF2 import PdfReader
from langchain.embeddings.openai import OpenAIEmbeddings
from langchain.text_splitter import CharacterTextSplitter
from langchain.vectorstores import FAISS

import os
os.environ["OPENAI_API_KEY"] = " OPENAI Key"

# provide the path of  pdf file/files.
pdfreader = PdfReader('ISONewEngland.pdf')

from typing_extensions import Concatenate
# read text from pdf
raw_text = ''
for i, page in enumerate(pdfreader.pages):
    content = page.extract_text()
    if content:
        raw_text += content

raw_text

# We need to split the text using Character Text Split such that it sshould not increse token size
text_splitter = CharacterTextSplitter(
    separator = "",
    chunk_size = 600,
    chunk_overlap  = 300,
    length_function = len,
)
texts = text_splitter.split_text(raw_text)

len(texts)

# Download embeddings from OpenAI
embeddings = OpenAIEmbeddings()

document_search = FAISS.from_texts(texts, embeddings)

document_search

from langchain.chains.question_answering import load_qa_chain
from langchain.llms import OpenAI

chain = load_qa_chain(OpenAI(), chain_type="stuff")

query = "What is the solution component for project ID 1742"
docs = document_search.similarity_search(query)
chain.run(input_documents=docs, question=query)